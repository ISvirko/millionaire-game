{"version":3,"sources":["assets/hand.svg","assets/sounds/right.mp3","assets/sounds/wrong.mp3","assets/sounds/final_answer.mp3","assets/sounds/background.mp3","assets/sounds/winning_theme.mp3","redux/gameSlice.ts","redux/store.ts","components/AppButton/AppButton.styles.ts","components/AppButton/AppButton.tsx","components/AppImage/AppImage.styles.ts","components/AppImage/AppImage.tsx","components/Layout/Layout.styles.ts","components/Layout/Layout.tsx","helpers/sounds.ts","routes.ts","views/GameStartView/GameStartView.styles.ts","views/GameStartView/GameStartView.tsx","redux/gameSelectors.ts","components/Menu/BurgerMenu/BurgerMenu.styles.ts","components/Menu/BurgerMenu/BurgerMenu.tsx","helpers/useWindowWidth.ts","components/Menu/Menu.styles.ts","components/Menu/ScoreDisplay.tsx","components/Menu/Menu.tsx","components/Question/Question.styles.ts","components/Question/Question.tsx","components/AnswersBlock/AnswerBox/AnswerDisplay/AnswerDisplay.tsx","typescriptExports/EnumAnswerStatus.ts","helpers/handleSound.ts","components/AnswersBlock/AnswerBox/AnswerBox.tsx","components/AnswersBlock/AnswersBlock.styles.ts","components/AnswersBlock/AnswerBlock.tsx","helpers/getQuestionsSet.ts","views/GameView/GameView.styles.ts","views/GameView/GameView.tsx","views/GameOverView/GameOverView.styles.ts","views/GameOverView/GameOverView.tsx","theme.ts","App.styles.ts","App.tsx","index.tsx"],"names":["module","exports","quizSet","createSlice","name","initialState","reducers","setQuizSet","_","payload","currentIdx","setCurrentIdx","score","setScore","store","configureStore","reducer","combineReducers","gameSlice","middleware","getDefaultMiddleware","serializableCheck","devTools","StyledButton","styled","button","theme","colors","orange100","white100","orange80","orange120","AppButton","children","onClick","type","ImageContainer","div","StyledImage","img","AppImage","src","alt","PageWrapper","ViewContainer","Content","Layout","HandImg","correctSound","Audio","correct","incorrectSound","incorrect","clickedSound","clicked","backgroundSound","background","end","HomeViewBackground","orange5","GameTitle","h1","StyledLink","Link","HomeView","to","routes","play","gameSelectors","createSelector","state","StyledBurger","black100","open","BurgerMenu","handleClick","useWindowWidth","useState","window","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","MenuList","ul","MenuContainer","StyledSvg","svg","ScoreDisplay","stroke","fill","height","viewBox","xmlns","d","x","y","fontSize","textAnchor","Menu","setOpen","wideScreen","setWideScreen","useSelector","scoresArray","scores","rewards","slice","useContext","ThemeContext","scoresStatus","map","idx","black40","status","key","QuestionContainer","QuestionText","h3","Question","question","AnswerStatus","StyledAnswerBox","AnswerDisplay","disabled","optionColor","answerColor","option","answer","handleSound","prevSound","currentSound","pause","currentTime","AnswerBox","setDisabled","isCorrect","EnumAnswerStatus","Initial","setStatus","dispatch","useDispatch","history","useHistory","handleFinishGame","setTimeout","push","colorScheme","Clicked","Correct","green5","green100","Incorrect","red5","red100","nextIndex","length","actions","handleNextQuestion","Answers","OPTIONS","AnswersBlock","content","getQuestionsSet","array","randomIdx","games","Math","floor","random","set","find","questions","GameViewContainer","GameScreen","black5","GameContainer","GameView","ContentText","ScoreText","p","TotalScore","GameOverView","GlobalStyle","createGlobalStyle","App","path","exact","component","GameStartView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5b50985.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.fe5139ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.a3c5c35e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong.b8883050.mp3\";","module.exports = __webpack_public_path__ + \"static/media/final_answer.b0092313.mp3\";","module.exports = __webpack_public_path__ + \"static/media/background.d9cb525d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/winning_theme.b1412542.mp3\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst quizSet = createSlice({\r\n  name: 'quizSet',\r\n  initialState: [],\r\n  reducers: {\r\n    setQuizSet: (_, { payload }) => payload,\r\n  },\r\n});\r\n\r\nconst currentIdx = createSlice({\r\n  name: 'currentIdx',\r\n  initialState: 0,\r\n  reducers: {\r\n    setCurrentIdx: (_, { payload }) => payload,\r\n  },\r\n});\r\n\r\nconst score = createSlice({\r\n  name: 'score',\r\n  initialState: 0,\r\n  reducers: {\r\n    setScore: (_, { payload }) => payload,\r\n  },\r\n});\r\n\r\nexport default { quizSet, currentIdx, score };\r\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport gameSlice from './gameSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: combineReducers({\r\n    [gameSlice.quizSet.name]: gameSlice.quizSet.reducer,\r\n    [gameSlice.currentIdx.name]: gameSlice.currentIdx.reducer,\r\n    [gameSlice.score.name]: gameSlice.score.reducer,\r\n  }),\r\n\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }),\r\n\r\n  devTools: true,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 16px 24px;\r\n  border-radius: 8px;\r\n  background: ${({ theme }) => theme.colors.orange100};\r\n  width: 288px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.colors.white100};\r\n\r\n  &: hover {\r\n    background: ${({ theme }) => theme.colors.orange80};\r\n  }\r\n\r\n  &: active {\r\n    background: ${({ theme }) => theme.colors.orange120};\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    padding: 20px 24px;\r\n    border-radius: 12px;\r\n    width: 296px;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport default StyledButton;\r\n","import React from 'react';\r\nimport StyledButton from './AppButton.styles';\r\n\r\ninterface IntAppButton {\r\n  children: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst AppButton = ({ children, onClick }: IntAppButton) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default AppButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const ImageContainer = styled.div`\r\n  margin: 100px auto 40px;\r\n  width: max-content;\r\n\r\n  @media (min-width: 1024px) {\r\n    margin: 0;\r\n    padding: 0 80px;\r\n  }\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n  width: 200px;\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 458px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { ImageContainer, StyledImage } from './AppImage.styles';\r\n\r\ntype TypeAppImage = {\r\n  src: string;\r\n  alt: string;\r\n};\r\n\r\nconst AppImage = ({ src, alt }: TypeAppImage) => {\r\n  return (\r\n    <ImageContainer>\r\n      <StyledImage src={src} alt={alt} />\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default AppImage;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageWrapper = styled.div`\r\n  min-height: 100vh;\r\n\r\n  @media (min-width: 1024px) {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const ViewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  min-height: 100vh;\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 100vh;\r\n    flex-direction: row;\r\n    height: max-content;\r\n    aign-self: center;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding: 0 30px;\r\n  max-width: 320px;\r\n  margin-bottom: 56px;\r\n\r\n  @media (min-width: 1024px) {\r\n    padding-right: 80px;\r\n    align-items: flex-start;\r\n    max-width: 600px;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport AppImage from '../AppImage/AppImage';\r\nimport HandImg from '../../assets/hand.svg';\r\nimport { Content, PageWrapper, ViewContainer } from './Layout.styles';\r\n\r\ntype TLayout = {\r\n  children: JSX.Element;\r\n};\r\n\r\nconst Layout = ({ children }: TLayout) => {\r\n  return (\r\n    <PageWrapper>\r\n      <ViewContainer>\r\n        <AppImage src={HandImg} alt=\"thumbs-up\" />\r\n\r\n        <Content>{children}</Content>\r\n      </ViewContainer>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import correct from '../assets/sounds/right.mp3';\r\nimport incorrect from '../assets/sounds/wrong.mp3';\r\nimport clicked from '../assets/sounds/final_answer.mp3';\r\nimport background from '../assets/sounds/background.mp3';\r\nimport end from '../assets/sounds/winning_theme.mp3';\r\n\r\nexport const correctSound = new Audio(correct);\r\nexport const incorrectSound = new Audio(incorrect);\r\nexport const clickedSound = new Audio(clicked);\r\nexport const backgroundSound = new Audio(background);\r\nexport const endSound = new Audio(end);\r\n","export default {\r\n  gameStart: '/',\r\n  game: '/game',\r\n  gameOver: '/gameOver',\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const HomeViewBackground = styled.div`\r\n  min-height: 100vh;\r\n  background: linear-gradient(\r\n    to bottom right,\r\n    ${({ theme }) => theme.colors.white100} 0%,\r\n    ${({ theme }) => theme.colors.white100} 50%,\r\n    ${({ theme }) => theme.colors.orange5} 50%,\r\n    ${({ theme }) => theme.colors.orange5} 100%\r\n  );\r\n`;\r\n\r\nexport const GameTitle = styled.h1`\r\n  text-align: center;\r\n  font-weight: 600;\r\n  font-size: 32px;\r\n  margin-bottom: 70px;\r\n\r\n  @media (min-width: 1024px) {\r\n    text-align: left;\r\n    font-size: 46px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: 56px;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color: inherit;\r\n`;\r\n","import React from 'react';\r\nimport AppButton from '../../components/AppButton/AppButton';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport { backgroundSound } from '../../helpers/sounds';\r\nimport routes from '../../routes';\r\nimport {\r\n  GameTitle,\r\n  HomeViewBackground,\r\n  StyledLink,\r\n} from './GameStartView.styles';\r\n\r\nconst HomeView = () => {\r\n  return (\r\n    <HomeViewBackground>\r\n      <Layout>\r\n        <>\r\n          <GameTitle>Who wants to be a millionaire?</GameTitle>\r\n          <StyledLink to={routes.game}>\r\n            <AppButton onClick={() => backgroundSound.play()}>Start</AppButton>\r\n          </StyledLink>\r\n        </>\r\n      </Layout>\r\n    </HomeViewBackground>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport IntQuestion from '../typescriptExports/IntQuestion';\r\n\r\ninterface IntState {\r\n  quizSet: IntQuestion[];\r\n  currentIdx: number;\r\n  score: number;\r\n}\r\n\r\nconst gameSelectors = createSelector(\r\n  (state: IntState) => ({\r\n    quizSet: state.quizSet,\r\n    currentIdx: state.currentIdx,\r\n    score: state.score,\r\n  }),\r\n  state => state,\r\n);\r\n\r\nexport default gameSelectors;\r\n","import styled from 'styled-components';\r\nimport { TBurgerMenu } from '../../../typescriptExports/TBurgerMenu';\r\n\r\nconst StyledBurger = styled.div<TBurgerMenu>`\r\n  width: 16px;\r\n  height: 14px;\r\n  cursor: pointer;\r\n  position: fixed;\r\n  top: 22px;\r\n  right: 22px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  z-index: 100;\r\n\r\n  div {\r\n    width: 1rem;\r\n    height: 0.15rem;\r\n    background: ${({ theme }) => theme.colors.black100};\r\n    border-radius: 2px;\r\n    transition: all 0.3s linear;\r\n    transform-origin: 1px;\r\n\r\n    &:first-child {\r\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      opacity: ${({ open }) => (open ? '0' : '1')};\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledBurger;\r\n","import React from 'react';\r\nimport StyledBurger from './BurgerMenu.styles';\r\n\r\ninterface IntBurger {\r\n  open: boolean;\r\n  handleClick: React.MouseEventHandler;\r\n}\r\n\r\nconst BurgerMenu = ({ open, handleClick }: IntBurger) => {\r\n  return (\r\n    <StyledBurger open={open} onClick={handleClick}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </StyledBurger>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useWindowWidth = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  });\r\n\r\n  return width;\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import styled from 'styled-components';\r\nimport { TBurgerMenu } from '../../typescriptExports/TBurgerMenu';\r\n\r\nexport const MenuList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  list-style: none;\r\n  align-self: flex-start;\r\n\r\n  @media (min-width: 1024px) {\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const MenuContainer = styled.div<TBurgerMenu>`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 50px;\r\n  background-color: ${({ theme }) => theme.colors.white100};\r\n  top: 0;\r\n  left: 0;\r\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(-100%)')};\r\n  transition: transform 0.3s ease-in-out;\r\n`;\r\n\r\nexport const StyledSvg = styled.svg`\r\n  &:not(:first-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport useWindowWidth from '../../helpers/useWindowWidth';\r\nimport { StyledSvg } from './Menu.styles';\r\n\r\ninterface IntScore {\r\n  stroke: string;\r\n  fill: string;\r\n  score: number;\r\n}\r\n\r\nconst ScoreDisplay = ({ stroke, fill, score }: IntScore) => {\r\n  const width = useWindowWidth();\r\n\r\n  return (\r\n    <>\r\n      {width < 1024 ? (\r\n        <StyledSvg\r\n          width=\"320\"\r\n          height=\"32\"\r\n          viewBox=\"0 0 320 32\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M41 16H0\" stroke={stroke} />\r\n          <path d=\"M320 16H279\" stroke={stroke} />\r\n          <path\r\n            d=\"M53.5303 3.70404C55.6719 1.64809 58.5256 0.5 61.4944 0.5H258.506C261.474 0.5 264.328 1.64809 266.47 3.70404L279.278 16L266.47 28.296C264.328 30.3519 261.474 31.5 258.506 31.5H61.4944C58.5256 31.5 55.6719 30.3519 53.5303 28.296L40.722 16L53.5303 3.70404Z\"\r\n            fill=\"white\"\r\n            stroke={stroke}\r\n          />\r\n          <text x=\"160\" y=\"22\" fontSize=\"14\" fill={fill} textAnchor=\"middle\">\r\n            ${score}\r\n          </text>\r\n        </StyledSvg>\r\n      ) : (\r\n        <StyledSvg\r\n          width=\"376\"\r\n          height=\"40\"\r\n          viewBox=\"0 0 376 40\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M69 20H0\" stroke={stroke} />\r\n          <path d=\"M376 20H307\" stroke={stroke} />\r\n          <path\r\n            d=\"M81.4526 4.63788C83.6376 2.01596 86.8742 0.5 90.2872 0.5H285.713C289.126 0.5 292.362 2.01597 294.547 4.63788L307.349 20L294.547 35.3621C292.362 37.984 289.126 39.5 285.713 39.5H90.2872C86.8742 39.5 83.6376 37.984 81.4526 35.3621L68.6509 20L81.4526 4.63788Z\"\r\n            fill=\"white\"\r\n            stroke={stroke}\r\n          />\r\n          <text x=\"187\" y=\"27\" fontSize=\"20\" fill={fill} textAnchor=\"middle\">\r\n            ${score}\r\n          </text>\r\n        </StyledSvg>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScoreDisplay;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport gameSelectors from '../../redux/gameSelectors';\r\nimport BurgerMenu from './BurgerMenu/BurgerMenu';\r\nimport ScoreDisplay from './ScoreDisplay';\r\nimport useWindowWidth from '../../helpers/useWindowWidth';\r\nimport IntTheme from '../../typescriptExports/IntTheme';\r\nimport scores from '../../scores.json';\r\nimport { MenuContainer, MenuList } from './Menu.styles';\r\n\r\nconst Menu = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [wideScreen, setWideScreen] = useState(false);\r\n\r\n  const { currentIdx } = useSelector(gameSelectors);\r\n\r\n  const width = useWindowWidth();\r\n\r\n  useEffect(() => {\r\n    if (width >= 1024) {\r\n      setWideScreen(true);\r\n      setOpen(true);\r\n    } else {\r\n      setWideScreen(false);\r\n      setOpen(false);\r\n    }\r\n  }, [width]);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const scoresArray = scores.rewards.slice(1);\r\n  const { colors } = useContext<IntTheme>(ThemeContext);\r\n\r\n  const scoresStatus = scoresArray.map((_, idx) => {\r\n    if (idx === currentIdx) {\r\n      return {\r\n        fill: colors.orange100,\r\n        stroke: colors.orange100,\r\n      };\r\n    }\r\n    if (idx < currentIdx && idx >= 0) {\r\n      return {\r\n        fill: colors.black40,\r\n        stroke: colors.black40,\r\n      };\r\n    }\r\n    if (idx > currentIdx) {\r\n      return {\r\n        fill: colors.black100,\r\n        stroke: colors.black40,\r\n      };\r\n    }\r\n\r\n    return {\r\n      fill: colors.black100,\r\n      stroke: colors.black40,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!wideScreen ? (\r\n        <>\r\n          <BurgerMenu open={open} handleClick={handleMenuOpen} />\r\n\r\n          <MenuContainer open={open}>\r\n            <MenuList>\r\n              {scoresStatus.map((status, idx) => (\r\n                <ScoreDisplay\r\n                  key={idx}\r\n                  stroke={status.stroke}\r\n                  fill={status.fill}\r\n                  score={scoresArray[idx]}\r\n                />\r\n              ))}\r\n            </MenuList>\r\n          </MenuContainer>\r\n        </>\r\n      ) : (\r\n        <MenuList>\r\n          {scoresStatus.map((status, idx) => (\r\n            <ScoreDisplay\r\n              key={idx}\r\n              stroke={status.stroke}\r\n              fill={status.fill}\r\n              score={scoresArray[idx]}\r\n            />\r\n          ))}\r\n        </MenuList>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import styled from 'styled-components';\r\n\r\nexport const QuestionContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 60px;\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 0 20px;\r\n    max-width: 800px;\r\n  }\r\n`;\r\n\r\nexport const QuestionText = styled.h3`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin-top: 142px;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 32px;\r\n    text-align: left;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport gameSelectors from '../../redux/gameSelectors';\r\nimport { QuestionText, QuestionContainer } from './Question.styles';\r\n\r\nconst Question = () => {\r\n  const { quizSet, currentIdx } = useSelector(gameSelectors);\r\n\r\n  return (\r\n    <QuestionContainer>\r\n      <QuestionText>{quizSet[currentIdx].question}</QuestionText>\r\n    </QuestionContainer>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useWindowWidth from '../../../../helpers/useWindowWidth';\r\n\r\nconst StyledAnswerBox = styled.button`\r\n  margin-bottom: 8px;\r\n\r\n  @media (min-width: 1024px) {\r\n    &:nth-child(-n + 2) {\r\n      margin-bottom: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IntAnswerBox {\r\n  handleClick: () => void;\r\n  disabled: boolean;\r\n  stroke: string;\r\n  fill: string;\r\n  optionColor: string;\r\n  answerColor: string;\r\n  option: string;\r\n  answer: string;\r\n}\r\n\r\nconst AnswerDisplay = ({\r\n  handleClick,\r\n  disabled,\r\n  stroke,\r\n  fill,\r\n  optionColor,\r\n  answerColor,\r\n  option,\r\n  answer,\r\n}: IntAnswerBox) => {\r\n  const width = useWindowWidth();\r\n\r\n  return (\r\n    <>\r\n      {width < 1024 ? (\r\n        <StyledAnswerBox\r\n          type=\"button\"\r\n          onClick={handleClick}\r\n          disabled={disabled}\r\n        >\r\n          <svg\r\n            width=\"320\"\r\n            height=\"56\"\r\n            viewBox=\"0 0 320 56\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M303 28L320 28\" stroke={stroke} />\r\n            <path d=\"M0 28L17 28\" stroke={stroke} />\r\n            <path\r\n              d=\"M32.8175 5.31576C34.9762 2.29361 38.4615 0.5 42.1754 0.5H277.825C281.539 0.5 285.024 2.29361 287.183 5.31576L303.386 28L287.183 50.6842C285.024 53.7064 281.539 55.5 277.825 55.5H42.1754C38.4615 55.5 34.9762 53.7064 32.8175 50.6842L16.6145 28L32.8175 5.31576Z\"\r\n              fill={fill}\r\n              stroke={stroke}\r\n            />\r\n            <text x=\"45\" y=\"33\" fontSize=\"14\" fill={optionColor}>\r\n              {option}\r\n            </text>\r\n            <text x=\"65\" y=\"33\" fontSize=\"14\" fill={answerColor}>\r\n              {answer}\r\n            </text>\r\n          </svg>\r\n        </StyledAnswerBox>\r\n      ) : (\r\n        <StyledAnswerBox\r\n          type=\"button\"\r\n          onClick={handleClick}\r\n          disabled={disabled}\r\n        >\r\n          <svg\r\n            width=\"405\"\r\n            height=\"72\"\r\n            viewBox=\"0 0 405 72\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M388 36L405 36\" stroke={stroke} />\r\n            <path d=\"M0 36L17 36\" stroke={stroke} />\r\n            <path\r\n              d=\"M38.7172 5.28344C40.8781 2.28016 44.3521 0.5 48.052 0.5H356.948C360.648 0.5 364.122 2.28016 366.283 5.28344L388.384 36L366.283 66.7166C364.122 69.7198 360.648 71.5 356.948 71.5H48.052C44.3521 71.5 40.8781 69.7198 38.7172 66.7166L16.616 36L38.7172 5.28344Z\"\r\n              fill={fill}\r\n              stroke={stroke}\r\n            />\r\n            <text x=\"50\" y=\"42\" fontSize=\"20\" fill={optionColor}>\r\n              {option}\r\n            </text>\r\n            <text x=\"76\" y=\"42\" fontSize=\"20\" fill={answerColor}>\r\n              {answer}\r\n            </text>\r\n          </svg>\r\n        </StyledAnswerBox>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnswerDisplay;\r\n","enum AnswerStatus {\r\n  Initial = 'initial',\r\n  Clicked = 'clicked',\r\n  Correct = 'correct',\r\n  Incorrect = 'incorrect',\r\n}\r\n\r\nexport default AnswerStatus;\r\n","const handleSound = (\r\n  prevSound: HTMLAudioElement | null,\r\n  currentSound: HTMLAudioElement,\r\n) => {\r\n  if (prevSound) {\r\n    prevSound.pause();\r\n    const stopSound = prevSound;\r\n    stopSound.currentTime = 0;\r\n  }\r\n\r\n  currentSound.play();\r\n};\r\n\r\nexport default handleSound;\r\n","import React, { Dispatch, SetStateAction, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ThemeContext } from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../../../redux/store';\r\nimport gameSlice from '../../../redux/gameSlice';\r\nimport gameSelectors from '../../../redux/gameSelectors';\r\nimport AnswerDisplay from './AnswerDisplay/AnswerDisplay';\r\nimport handleSound from '../../../helpers/handleSound';\r\nimport {\r\n  backgroundSound,\r\n  clickedSound,\r\n  correctSound,\r\n  incorrectSound,\r\n} from '../../../helpers/sounds';\r\nimport EnumAnswerStatus from '../../../typescriptExports/EnumAnswerStatus';\r\nimport IntTheme from '../../../typescriptExports/IntTheme';\r\nimport routes from '../../../routes';\r\nimport scores from '../../../scores.json';\r\n\r\nconst TIMEOUT = 4000;\r\n\r\ninterface IntAnswerBox {\r\n  option: string;\r\n  answer: string;\r\n  disabled: boolean;\r\n  setDisabled: Dispatch<SetStateAction<boolean>>;\r\n  isCorrect: boolean;\r\n}\r\n\r\nconst AnswerBox = ({\r\n  option,\r\n  answer,\r\n  disabled,\r\n  setDisabled,\r\n  isCorrect,\r\n}: IntAnswerBox) => {\r\n  const [status, setStatus] = useState(EnumAnswerStatus.Initial);\r\n\r\n  const { quizSet, currentIdx } = useSelector(gameSelectors);\r\n\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  // HANDLE FINISH GAME\r\n  const history = useHistory();\r\n\r\n  const handleFinishGame = () => {\r\n    setTimeout(() => {\r\n      setStatus(EnumAnswerStatus.Initial);\r\n      history.push(routes.gameOver);\r\n    }, TIMEOUT);\r\n  };\r\n\r\n  // HANDLE NEXT QUESTION\r\n  const handleNextQuestion = () => {\r\n    const nextIndex = currentIdx + 1;\r\n\r\n    if (quizSet && nextIndex > quizSet.length - 1) {\r\n      handleFinishGame();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      dispatch(gameSlice.currentIdx.actions.setCurrentIdx(nextIndex));\r\n      dispatch(gameSlice.score.actions.setScore(scores.rewards[nextIndex]));\r\n      setStatus(EnumAnswerStatus.Initial);\r\n      backgroundSound.play();\r\n    }, TIMEOUT);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    handleSound(backgroundSound, clickedSound);\r\n    setStatus(EnumAnswerStatus.Clicked);\r\n    setDisabled(true);\r\n\r\n    setTimeout(() => {\r\n      if (isCorrect) {\r\n        handleSound(clickedSound, correctSound);\r\n        setStatus(EnumAnswerStatus.Correct);\r\n        setDisabled(false);\r\n\r\n        handleNextQuestion();\r\n      }\r\n\r\n      if (!isCorrect) {\r\n        handleSound(clickedSound, incorrectSound);\r\n        setStatus(EnumAnswerStatus.Incorrect);\r\n        setDisabled(false);\r\n\r\n        handleFinishGame();\r\n      }\r\n    }, TIMEOUT);\r\n  };\r\n\r\n  // SET COLORS\r\n  const { colors } = useContext<IntTheme>(ThemeContext);\r\n\r\n  const getColorScheme = (): { fill: string; stroke: string } => {\r\n    if (status === EnumAnswerStatus.Clicked)\r\n      return {\r\n        fill: colors.orange5,\r\n        stroke: colors.orange100,\r\n      };\r\n\r\n    if (status === EnumAnswerStatus.Correct)\r\n      return {\r\n        fill: colors.green5,\r\n        stroke: colors.green100,\r\n      };\r\n\r\n    if (status === EnumAnswerStatus.Incorrect)\r\n      return {\r\n        fill: colors.red5,\r\n        stroke: colors.red100,\r\n      };\r\n\r\n    return {\r\n      fill: colors.white100,\r\n      stroke: colors.black40,\r\n    };\r\n  };\r\n\r\n  const colorScheme = getColorScheme();\r\n\r\n  // RENDER\r\n  return (\r\n    <AnswerDisplay\r\n      handleClick={handleClick}\r\n      disabled={disabled}\r\n      stroke={colorScheme.stroke}\r\n      fill={colorScheme.fill}\r\n      optionColor={colors.orange100}\r\n      answerColor={colors.black100}\r\n      option={option}\r\n      answer={answer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AnswerBox;\r\n","import styled from 'styled-components';\r\n\r\nconst Answers = styled.ul`\r\n  margin-bottom: 24px;\r\n\r\n  @media (min-width: 1024px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    margin-bottom: 122px;\r\n    width: 864px;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n\r\nexport default Answers;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport gameSelectors from '../../redux/gameSelectors';\r\nimport AnswerBox from './AnswerBox/AnswerBox';\r\nimport Answers from './AnswersBlock.styles';\r\n\r\nconst OPTIONS = ['A', 'B', 'C', 'D'];\r\n\r\nconst AnswersBlock = () => {\r\n  const { quizSet, currentIdx } = useSelector(gameSelectors);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  return (\r\n    <Answers>\r\n      {quizSet[currentIdx].content.map((answer, idx) => {\r\n        return (\r\n          <AnswerBox\r\n            key={OPTIONS[idx]}\r\n            option={OPTIONS[idx]}\r\n            answer={answer}\r\n            disabled={disabled}\r\n            setDisabled={setDisabled}\r\n            isCorrect={idx === quizSet[currentIdx].correct}\r\n          />\r\n        );\r\n      })}\r\n    </Answers>\r\n  );\r\n};\r\n\r\nexport default AnswersBlock;\r\n","import IntGame from '../typescriptExports/IntGame';\r\nimport { games } from '../questions.json';\r\n\r\nconst getRandowIdx = (array: IntGame[]) => {\r\n  return Math.floor(Math.random() * array.length);\r\n};\r\n\r\nconst getQuestionsSet = () => {\r\n  const randomIdx = getRandowIdx(games);\r\n  const set = games.find((_, idx) => idx === randomIdx);\r\n\r\n  return set?.questions;\r\n};\r\n\r\nexport default getQuestionsSet;\r\n","import styled from 'styled-components';\r\n\r\nexport const GameViewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const GameScreen = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background-color: ${({ theme }) => theme.colors.black5};\r\n\r\n  @media (min-width: 1024px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  min-height: 100vh;\r\n  max-width: 320px;\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: 1024px) {\r\n    max-width: 1024px;\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../../redux/store';\r\nimport gameSlice from '../../redux/gameSlice';\r\nimport gameSelectors from '../../redux/gameSelectors';\r\nimport Menu from '../../components/Menu/Menu';\r\nimport Question from '../../components/Question/Question';\r\nimport AnswersBlock from '../../components/AnswersBlock/AnswerBlock';\r\nimport routes from '../../routes';\r\nimport getQuestionsSet from '../../helpers/getQuestionsSet';\r\nimport {\r\n  GameScreen,\r\n  GameViewContainer,\r\n  GameContainer,\r\n} from './GameView.styles';\r\n\r\nconst GameView = () => {\r\n  const { quizSet } = useSelector(gameSelectors);\r\n\r\n  const dispatch: AppDispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(gameSlice.quizSet.actions.setQuizSet(getQuestionsSet()));\r\n    dispatch(gameSlice.currentIdx.actions.setCurrentIdx(0));\r\n    dispatch(gameSlice.score.actions.setScore(0));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {quizSet && quizSet.length > 0 ? (\r\n        <GameViewContainer>\r\n          <GameScreen>\r\n            <GameContainer>\r\n              <Question />\r\n              <AnswersBlock />\r\n            </GameContainer>\r\n          </GameScreen>\r\n\r\n          <Menu />\r\n        </GameViewContainer>\r\n      ) : (\r\n        <>\r\n          <p>Whooops...something went wrong</p>\r\n          <p>\r\n            <Link to={routes.gameStart}>Go back</Link>\r\n          </p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameView;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const ContentText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 60px;\r\n\r\n  @media (min-width: 1024px) {\r\n    align-items: flex-start;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const ScoreText = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  opacity: 0.5;\r\n  margin-bottom: 8px;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 37px;\r\n  }\r\n`;\r\n\r\nexport const TotalScore = styled.p`\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 65px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color: inherit;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport gameSelectors from '../../redux/gameSelectors';\r\nimport AppButton from '../../components/AppButton/AppButton';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport routes from '../../routes';\r\nimport {\r\n  ContentText,\r\n  ScoreText,\r\n  StyledLink,\r\n  TotalScore,\r\n} from './GameOverView.styles';\r\n\r\nconst GameOverView = () => {\r\n  const { score } = useSelector(gameSelectors);\r\n\r\n  return (\r\n    <Layout>\r\n      <>\r\n        <ContentText>\r\n          <ScoreText>Total Score: </ScoreText>\r\n          <TotalScore>${`${score} earned`}</TotalScore>\r\n        </ContentText>\r\n\r\n        <StyledLink to={routes.gameStart}>\r\n          <AppButton>Try again</AppButton>\r\n        </StyledLink>\r\n      </>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default GameOverView;\r\n","export default {\r\n  colors: {\r\n    white100: '#FFFFFF',\r\n    black5: '#F5F5F7',\r\n    black40: '#D0D0D8',\r\n    black100: '#1C1C21',\r\n    red5: '#FDEEED',\r\n    red100: '#EC6259',\r\n    green5: '#E6FAEA',\r\n    green100: '#47D867',\r\n    orange5: '#FFF3EB',\r\n    orange80: '#FFAC70',\r\n    orange100: '#FF8B37',\r\n    orange120: '#E87928',\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport theme from './theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;  \r\n  font-family: 'Inter', sans-serif;\r\n  -webkit-font-smoothing: antialiased;  \r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: ${theme.colors.black100};\r\n}  \r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: inherit;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  background: transparent;\r\n\r\n  &:disabled {\r\n    cursor: auto;\r\n  }\r\n}`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GameStartView from './views/GameStartView/GameStartView';\nimport GameView from './views/GameView/GameView';\nimport GameOverView from './views/GameOverView/GameOverView';\nimport routes from './routes';\nimport theme from './theme';\nimport GlobalStyle from './App.styles';\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Switch>\n            <Route path={routes.gameStart} exact component={GameStartView} />\n            <Route path={routes.game} exact component={GameView} />\n            <Route path={routes.gameOver} component={GameOverView} />\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}